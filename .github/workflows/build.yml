name: Build and push latest image

# TODO: we may also want to run this as a CRON job to ensure that the base
# Ubuntu image is recent enough.
on:
  push:
    branches:
      - main
      - stable
  pull_request:
    branches:
      - main
      - stable

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Determine Docker image tag
      id: get-tag
      shell: bash
      run: |
        TAG=""
        REF="$GITHUB_BASE_REF"
        if [[ -z "$REF" ]]; then
            REF="$GITHUB_REF"
        fi
        if [[ "$REF" =~ "main" ]]; then
            TAG="latest"
        elif [[ "$REF" =~ "stable" ]]; then
            TAG="stable"
        else
            echo "Invalid Github ref $REF"
            exit 1
        fi
        echo "Tag is $TAG"
        echo "::set-output name=tag::$TAG"
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub if needed
      if: ${{ github.repository == 'p4lang/third-party' && github.event_name == 'push' }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and export to Docker
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true
        tags: p4lang/third-party:${{ steps.get-tag.outputs.tag }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    - name: Test Docker image
      run: |
        ./tools/run_tests
    - name: Build and push to Docker if needed
      if: ${{ github.repository == 'p4lang/third-party' && github.event_name == 'push' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: p4lang/third-party:${{ steps.get-tag.outputs.tag }}
    # See https://github.com/docker/build-push-action/issues/252
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
